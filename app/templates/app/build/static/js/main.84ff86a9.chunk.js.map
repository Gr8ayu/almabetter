{"version":3,"sources":["App.js","Leaderboard.js","reportWebVitals.js","AddScore.js","index.js"],"names":["App","className","href","target","src","to","Button","variant","Leaderboard","props","refreshList","axios","get","then","res","setState","scores","data","console","log","catch","err","renderItems","state","filter","item","name","toLowerCase","includes","search","sort","a","b","map","rollno","maths","chemistry","physics","total","Number","percentage","toFixed","searchHandle","bind","sortScoreby","this","event","value","placeholder","onChange","onClick","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialstate","validateOnChange","error","submitCalled","allFieldsValidated","AddScore","validatemarks","marks","isNaN","validatename","validateroll","roll","handleChange","validator","field","fieldVal","validatedata","handleSubmit","evt","preventDefault","self","method","url","headers","response","alert","status","key","Form","onSubmit","Group","controlId","Label","Control","type","classnames","Routing","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84ff86a9.chunk.js","sourcesContent":["import \"./App.css\";\nimport Button from \"react-bootstrap/Button\";\n// import leaderboard from './Leaderboard';\nimport { useRouteMatch, Link, Switch, Route } from \"react-router-dom\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div>\n          <a href=\"https://www.almabetter.com/\" target=\"_blank\">\n            <img src=\"https://s3.amazonaws.com/thinkific-import/348209/IKsWBsZXSpSGIaIKs5mi_LogoNoBG_png\"></img>\n          </a>\n        </div>\n        <div>\n          <Link to=\"/leaderboard\">\n            <Button variant=\"primary\">LeaderBoard</Button>{\" \"}\n          </Link>\n          <Link to=\"/addscore\">\n            <Button variant=\"secondary\">Add Marks</Button>{\" \"}\n\n          </Link>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { useRouteMatch, Link, Switch, Route } from \"react-router-dom\";\n\nclass Leaderboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sort: 'percentage',\n      scores: [],\n      search:''\n    };\n\n    this.searchHandle = this.searchHandle.bind(this)\n    this.sortScoreby = this.sortScoreby.bind(this)\n\n  }\n\n  componentDidMount() {\n    this.refreshList();\n  }\n\n  searchHandle(event){\n    this.setState({search:event.target.value})\n  }\n\n  sortScoreby(data){\n    this.setState({sort:data})\n    console.log(\"sorting list by\", data)\n  }\n\n  refreshList = () => {\n    axios\n      .get(\"/api/leaderboard\")\n      .then((res) => {\n        this.setState({ scores: res.data });\n        console.log(res.data);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  renderItems = () => {\n    const { scores } = this.state;\n    console.log(\"render\", scores);\n    var data = scores.filter((item)=>(item.name.toLowerCase().includes(this.state.search.toLowerCase())));\n    var sort = this.state.sort\n    \n    data = data.sort((a,b) =>  a[sort]-b[sort] )\n    console.log('after sorting', data)\n    return data.map((item) => (\n      <li\n        key={item.rollno}\n        className=\"list-group-item d-flex justify-content-between align-items-center\"\n      >\n        <span className={`todo-title mr-2 completed-todo`}>{item.rollno}</span>\n\n        <span className={`todo-title mr-2 completed-todo`}>{item.name}</span>\n\n        <span className={`todo-title mr-2 completed-todo`}>{item.maths}</span>\n\n        <span className={`todo-title mr-2 completed-todo`}>\n          {item.chemistry}\n        </span>\n\n        <span className={`todo-title mr-2 completed-todo`}>{item.physics}</span>\n\n        <span className={`todo-title mr-2 completed-todo`}>{item.total}</span>\n\n        <span className={`todo-title mr-2 completed-todo`}>\n          {Number((item.percentage).toFixed(2))} %\n        </span>\n\n        \n      </li>\n    ));\n  };\n\n  render() {\n    console.log(\"render again\", this.state);\n    return (\n      <main className=\"container\">\n        <h1 className=\"text-gray text-uppercase text-center my-4\">\n          Leaderboard\n        </h1>\n        <div className=\"row\">\n          <div className=\"col-md-6 col-sm-10 mx-auto p-0\">\n            <div className=\"card p-3\">\n              <div className=\"mb-4\">\n              <Link to=\"/addscore\"><button className=\"btn btn-primary\">Add Score</button></Link>\n              \n              <input className=\"ml-4\" placeholder=\"Search Name\" onChange={this.searchHandle}/>\n              </div>\n\n              <ul className=\"list-group list-group-flush border-top-0\">\n                <small>click on header to sort</small>\n                <li\n\n                  className=\"list-group-item d-flex justify-content-between align-items-center\"\n                >\n                  <span className={`todo-title mr-2 completed-todo gray`} onClick={()=>this.sortScoreby('rollno')} >\n                    rollno\n                  </span>\n\n                  <span className={`todo-title mr-2 completed-todo`} onClick={()=>{this.sortScoreby('name')}}>\n                    name\n                  </span>\n\n                  <span className={`todo-title mr-2 completed-todo`} onClick={()=>{this.sortScoreby('maths')}}>\n                    maths\n                  </span>\n\n                  <span className={`todo-title mr-2 completed-todo`} onClick={()=>{this.sortScoreby('chemistry')}}>\n                    chemistry\n                  </span>\n\n                  <span className={`todo-title mr-2 completed-todo`} onClick={()=>{this.sortScoreby('physics')}}>\n                    physics\n                  </span>\n\n                  <span className={`todo-title mr-2 completed-todo`} onClick={()=>{this.sortScoreby('total')}}>\n                    total\n                  </span>\n\n                  <span className={`todo-title mr-2 completed-todo`} onClick={()=>{this.sortScoreby('percentage')}}>\n                    percentage\n                  </span>\n\n                  \n                </li>\n                {this.renderItems()}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default Leaderboard;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { useRouteMatch, Link, Switch, Route } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport classnames from 'classnames';\nimport {Redirect} from 'react-router-dom';\nconst initialstate = {\n    name: {\n      value: \"\",\n      validateOnChange: false,\n      error: \"\",\n    },\n    rollno: {\n      value: \"\",\n      validateOnChange: false,\n      error: \"\",\n    },\n    maths: {\n      value: \"\",\n      validateOnChange: false,\n      error: \"\",\n    },\n    chemistry: {\n      value: \"\",\n      validateOnChange: false,\n      error: \"\",\n    },\n    physics: {\n      value: \"\",\n      validateOnChange: false,\n      error: \"\",\n    },\n    submitCalled: false,\n    allFieldsValidated: false,\n  };\n\nclass AddScore extends Component {\n  constructor(props) {\n    super(props);\n    this.state = initialstate;\n\n    this.validatedata = this.validatedata.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  validatemarks = (marks) => {\n    if (! marks){\n       return \"Enter valid marks\"\n    }\n    if (isNaN(marks)) {\n      return \"marks should be a number\";\n    }\n    if (marks < 0) {\n      return \"marks should be a greater than 0\";\n    }\n    if (marks > 100) {\n      return \"marks should be a less than 100\";\n    }\n    return false;\n  };\n  validatename = (name) => {\n    \n    return false;\n  };\n\n  validateroll = (roll) => {\n    if (! roll){\n        return \"Enter valid roll no\"\n    }\n    if (isNaN(roll)) {\n      return \"roll should be a number\";\n    }\n    if (roll < 0) {\n      return \"roll should be a greater than 0\";\n    }\n    return false;\n  };\n\n  handleChange = (validator, event) =>{\n    // console.log(event.target.name)\n    const field = event.target.name \n    const fieldVal = event.target.value;\n    console.log(this.state[field])\n   this.setState(state => ({\n    [field]: {\n      ...state[field],\n      value: fieldVal,\n      error:  validator(fieldVal) \n    }\n  }));\n\n\n  }\n\n  validatedata(event) {\n    // this.setState({ search: event.target.value });\n  }\n\n  \n  handleSubmit(evt) {\n    console.log(this.state);\n\n    evt.preventDefault();\n    // validate all fields\n    console.log('submit')\n    const {\n        rollno,\n        name,\n        maths,\n        physics,\n        chemistry,\n        allFieldsValidated,\n      } = this.state;\n\n      var data = {}\n      var self = this;\n      data.name = name.value;\n      data.rollno = rollno.value;\n      data.maths = maths.value;\n      data.chemistry = chemistry.value;\n      data.physics = physics.value;\n\n      axios({\n        method: 'post',\n        url: '/api/addscore',\n        data: data,\n        headers: {'Content-Type': 'application/json'\n         }\n        })\n        .then(function (response) {\n            \n            alert('Added Successfully')\n            self.setState(state => (initialstate));\n        })\n        .catch(function (response) {\n          \n            response = response.response\n            if(response.status == 400){\n                console.log(response.data)\n                for (var key in response.data) {\n                    console.log(key)\n                    self.setState(state => ({\n                        [key]: {\n                          ...state[key],\n                          error:  response.data[key]\n                        }\n                      }));\n                }\n            console.log(self.state)\n\n                \n               \n            }\n            \n            \n        });\n    \n  }\n\n\n  render() {\n    const {\n      rollno,\n      name,\n      maths,\n      physics,\n      chemistry,\n      allFieldsValidated,\n    } = this.state;\n    return (\n      <main className=\"container\">\n        <h1 className=\"text-gray text-uppercase text-center my-4\">Add Score</h1>\n        <div className=\"row\">\n          <div className=\"col-md-6 col-sm-10 mx-auto p-0\">\n            <div className=\"card p-3\">\n              <div className=\"mb-4\">\n                <Link to=\"/leaderboard\">\n                  <button className=\"btn btn-primary\">Leaderboard</button>\n                </Link>\n              </div>\n\n              <Form onSubmit={(evt) => this.handleSubmit(evt)}>\n                <Form.Group controlId=\"name\">\n                  <Form.Label>Name</Form.Label>\n                  <Form.Control\n                    name=\"name\"\n                    type=\"name\"\n                    placeholder=\"Name\"\n                    value={name.value}\n                    className={classnames(\n                      \"form-control\",\n                      { \"is-valid\": name.error === false },\n                      { \"is-invalid\": name.error }\n                    )}\n                    onChange={(evt) =>\n                      this.handleChange(this.validatename, evt)\n                    }\n                    \n                  />\n                  {name.error}\n                </Form.Group>\n                <Form.Group controlId=\"rollno\">\n                  <Form.Label>Roll</Form.Label>\n                  <Form.Control\n                    name=\"rollno\"\n\n                    type=\"text\"\n                    placeholder=\"roll no\"\n                    value={rollno.value}\n                    className={classnames(\n                      \"form-control\",\n                      { \"is-valid\": rollno.error === false },\n                      { \"is-invalid\": rollno.error }\n                    )}\n                    onChange={(evt) =>\n                      this.handleChange(this.validateroll, evt)\n                    }\n                  \n                  />\n                  {rollno.error}\n\n                </Form.Group>\n                <Form.Group controlId=\"maths\">\n                  <Form.Label>Maths</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"maths\"\n\n                    placeholder=\"maths marks\"\n                    value={maths.value}\n                    className={classnames(\n                      \"form-control\",\n                      { \"is-valid\": maths.error === false },\n                      { \"is-invalid\": maths.error }\n                    )}\n                    onChange={(evt) =>\n                      this.handleChange(this.validatemarks, evt)\n                    }\n                  \n                  />\n                  {maths.error}\n\n                </Form.Group>\n                <Form.Group controlId=\"physics\">\n                  <Form.Label>Physics</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"physics\"\n\n                    placeholder=\"Physics marks\"\n                    value={physics.value}\n                    className={classnames(\n                      \"form-control\",\n                      { \"is-valid\": physics.error === false },\n                      { \"is-invalid\": physics.error }\n                    )}\n                    onChange={(evt) =>\n                      this.handleChange(this.validatemarks, evt)\n                    }\n                    \n                  />\n                  {physics.error}\n\n                </Form.Group>\n                <Form.Group controlId=\"chemistry\">\n                  <Form.Label>chemistry</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"chemistry\"\n\n                    placeholder=\"chemistry marks\"\n                    value={chemistry.value}\n                    className={classnames(\n                      \"form-control\",\n                      { \"is-valid\": chemistry.error === false },\n                      { \"is-invalid\": chemistry.error }\n                    )}\n                    onChange={(evt) =>\n                      this.handleChange(this.validatemarks, evt)\n                    }\n                    \n                  />\n\n                </Form.Group>\n                {chemistry.error}\n                \n              \n                {allFieldsValidated && (\n                  <p className=\"text-success text-center\">\n                    Success, All fields are validated\n                  </p>\n                )}\n                <Button type=\"Submit\">Submit</Button>\n              </Form>\n            </div>\n          </div>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default AddScore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport leaderboard from './Leaderboard';\n// import ScoreForm from './ScoreForm';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n// import { browserHistory } from 'react-router';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Leaderboard from './Leaderboard';\nimport AddScore from './AddScore';\n// import Routes from './routes';\n\n\nconst Routing = () => {\n  return(\n    <Router>\n      \n      <Switch>\n        <Route exact path=\"/\" component={App} />\n        <Route path=\"/leaderboard\" component={Leaderboard} />\n        <Route path=\"/addscore\" component={AddScore} />\n      </Switch>\n      \n    </Router>\n  )\n}\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n     <Routing />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}